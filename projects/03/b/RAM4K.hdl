// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in = true, sel = address[9..11], a = Da, b  = Db, c = Dc, d = Dd, e = De, f = Df, g = Dg, h = Dh);
	And(a = Da, b = load, out = L0);
	And(a = Db, b = load, out = L1);
	And(a = Dc, b = load, out = L2);
	And(a = Dd, b = load, out = L3);
	And(a = De, b = load, out = L4);
	And(a = Df, b = load, out = L5);
	And(a = Dg, b = load, out = L6);
	And(a = Dh, b = load, out = L7);
	RAM512(in = in, load = L0, address = address[0..8], out = o0);
	RAM512(in = in, load = L1, address = address[0..8], out = o1);
	RAM512(in = in, load = L2, address = address[0..8], out = o2);
	RAM512(in = in, load = L3, address = address[0..8], out = o3);
	RAM512(in = in, load = L4, address = address[0..8], out = o4);
	RAM512(in = in, load = L5, address = address[0..8], out = o5);
	RAM512(in = in, load = L6, address = address[0..8], out = o6);
	RAM512(in = in, load = L7, address = address[0..8], out = o7);
	Mux8Way16(a = o0, b = o1, c = o2, d = o3, e = o4, f = o5, g = o6, h = o7, sel = address[9..11], out = out);
}